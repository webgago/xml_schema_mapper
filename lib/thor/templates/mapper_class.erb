# encoding: utf-8
# @note <%= type.annotation.to_s.gsub("\n", "\n# ") %>

<%-  elements.each do |element| -%>
# @attr <%= element.name %> [<%= element.type.name %>] <%= (element.annotation || element.type.annotation).to_s.gsub("\n", "\n# ") %>
<%- end -%>

<%- if options[:module_name].present? -%>
class <%= options[:module_name] %>::<%= name.camelize %>Mapper
<% else -%>
class <%= name.camelize %>Mapper
<% end -%>
  include XmlSchemaMapper
  schema '<%= schema_path %>'
  type '<%= name %>'

<% elements.each do |element| %>
  # @attr [<%= element.type.name || "annonymus subclass: #{element.name}" %>] <%= (element.annotation || element.type.annotation).to_s.gsub("\n", "\n# ") %>
  attr_accessor :<%= element.name.underscore %>
<%- end -%>

<% unless subclasses.empty? -%>
  <% subclasses.each do |subclass, type| %>
  class <%= subclass %>
    include XmlSchemaMapper
    schema '<%= schema_path %>'
    annonymus_type '<%= [name.camelize, subclass].join('::') %>'

    <%  type.elements.values.each do |element| %>
    # @attr [<%= element.type.name || "annonymus subclass: #{element.name}" %>] <%= (element.annotation || element.type.annotation).to_s.gsub("\n", "\n# ") %>
    attr_accessor :<%= element.name.underscore %>
    <%- end -%>
  end
  <% end %>
<% end -%>
end